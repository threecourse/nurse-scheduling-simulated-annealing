{"version":3,"sources":["components/Cell.module.css","components/NavBar.module.css","components/MainGrid.module.css","components/NavBar.js","components/Controller.js","modules/Utility.js","modules/Annealer.js","modules/GridState.js","modules/GridStateManager.js","components/Cell.js","components/MainGrid.js","components/MainUI.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","NavbarComponent","props","useState","Navbar","color","light","expand","NavbarBrand","className","styles","Controller","state","steps","Container","Row","style","textAlign","Col","xs","Button","onClick","this","resetFunc","optimizeFunc","size","Input","disabled","id","value","placeholder","width","Component","getRandomSeed","Math","random","pow","Random","seed","rand","XorShift","constructor","end","floor","Annealer","start_temp","end_temp","end_time","start_temperature","end_temperature","temperature","time","elapsed","max","min","score_current","score_next","is_minimize","prob","accept_prob","gain","eps","exp","GridState","height","matrix","current_score","st","r","c","push","evaluation_amount_s1","evaluation_amount_s2","evaluation_amount_n1","evaluation_amount_n2","evaluation_amount_n3","evaluation_amount_n4","evaluation_amount_n5","v","reduce","accm","curr","days_n_day_workers","map","days_n_night_workers","workers_n_holidays","workers_weekend_holidays","workers_serial_works","workers_day_after_night_work","workers_serial_night_works","day_values","workers","worker_values","days","weekends","violation","forEach","weekend","sat","sun","work_days","row","CreateWithArray","length","evaluate","defaultParams","n_trials","seed_runner","seed_annealer","GridStateManager","H","W","params","annealer","prob_action1","prob_action2","n_nurses","n_days","gridState","Create","isRunning","finished","changeCell","callback","reset","runAsync","then","self","Promise","resolve","setTimeout","run","i","update","p","randint","x","cx","next_score","accept","r1","r2","x1","x2","c1","c2","console","log","Cell","classes","additionalClasses","cls","isRightEnd","isBottom","top","left","join","content","defaultProps","MainGrid","keydown","headerHeight","headerWidth","headerH","headerW","indexHeight","indexWidth","indexH","indexW","cellHeight","cellWidth","cellH","cellW","indexSRHeight","indexSRWidth","indexSRH","indexSRW","cellSRHeight","cellSRWidth","cellSRH","cellSRW","headerNRHeight","headerNRWidth","headerNRH","headerNRW","cellNRHeight","cellNRWidth","cellNRH","cellNRW","y0","x0","y1","y2","manager","gridStateManager","cellValues","shiftResultValues","shift_matrix","nurseResultValues","nurse_matrix","bind","getControllerFunc","runAsyncAll","runner","updateController","setState","list","weekdays","contentSource","toString","cell","key","valuesList","cellValue","conditions","additionalClassesSource","headerArea","indexArea","mainArea","indexShiftResultArea","cellShiftResultArea","headerNurseResultArea","cellNurseResultArea","MainUI","MainGridChild","React","createRef","maxWidth","ref","App","optimize","getController","MainUIChild","ControllerChild","current","NavBar","fluid","md","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ffcf872.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__2qGwA\",\"is-right-cell\":\"Cell_is-right-cell__3iUjm\",\"is-bottom-cell\":\"Cell_is-bottom-cell__3zs6e\",\"inner-cell\":\"Cell_inner-cell__1EvVG\",\"main-cell\":\"Cell_main-cell__1W2t6\",\"index-cell\":\"Cell_index-cell__3bKwG\",\"header-cell\":\"Cell_header-cell__1JJUb\",\"success-cell\":\"Cell_success-cell__2VFgo\",\"failed-cell\":\"Cell_failed-cell__1Njrs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar-brand\":\"NavBar_navbar-brand__1bJXM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display-area\":\"MainGrid_display-area__35NRE\"};","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from 'reactstrap'\nimport styles from './NavBar.module.css'\n\nconst NavbarComponent = (props) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggle = () => setIsOpen(!isOpen)\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand className={styles['navbar-brand']}>\n          Nurse Scheduling Problem\n        </NavbarBrand>\n      </Navbar>\n    </div>\n  )\n}\n\nexport default NavbarComponent\n","/* eslint-disable no-unused-vars */\nimport React, { useState, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Row, Button, Input, Label, Col } from 'reactstrap'\n\nclass Controller extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.state.steps = 0\n  }\n\n  render() {\n    return (\n      <Container className=\"py-4 mx-4\">\n        <Row className=\"my-2\" style={{ textAlign: 'left' }}>\n          ナーススケジューリング問題を焼きなまし法により\n          <br />\n          解くプログラムです。\n        </Row>\n        <Row className=\"my-3\" />\n        <Row className=\"my-2 align-items-center\">\n          <Col xs=\"auto\" className=\"px-0 mx-1\">\n            <Button color=\"secondary\" onClick={this.props.resetFunc}>\n              Reset\n            </Button>\n          </Col>\n          <Col xs=\"auto\" className=\"px-0 mx-1\">\n            <Button color=\"primary\" onClick={this.props.optimizeFunc}>\n              Optimize\n            </Button>\n          </Col>\n\n          <Col xs=\"1\" />\n          <Col xs={{ size: 'auto' }} className=\"px-0 mx-1\">\n            <Input\n              disabled\n              id=\"steps\"\n              value={this.state.steps}\n              placeholder=\"0\"\n              style={{ textAlign: 'right', width: '80px' }}\n            />\n          </Col>\n          <Col\n            xs={{ size: 'auto' }}\n            className=\"px-2 float-right\"\n            style={{ textAlign: 'left' }}\n          >\n            steps\n          </Col>\n        </Row>\n        <Row className=\"my-2 align-items-center\" />\n        <Row className=\"my-3\" />\n        <Row className=\"my-2\" style={{ textAlign: 'left' }}>\n          表記：\n        </Row>\n        <Row className=\"my-2\" style={{ textAlign: 'left' }}>\n          <ul>\n            <li>Dは日勤、Nは夜勤を表します</li>\n            <li>\n              制約の各値は、条件を満たしていないことによる評価関数のマイナスを表します\n            </li>\n          </ul>\n        </Row>\n        <Row className=\"my-2\" style={{ textAlign: 'left' }}>\n          シフト制約：\n        </Row>\n        <Row>\n          <ul>\n            <li>条件1. 各日の日勤人数は2人以上</li>\n            <li>条件2. 各日の夜勤人数は2人以上</li>\n          </ul>\n        </Row>\n        <Row className=\"my-2\" style={{ textAlign: 'left' }}>\n          ナース制約：\n        </Row>\n        <Row style={{ textAlign: 'left' }}>\n          <ul>\n            <li>条件1. 休日は7日以上</li>\n            <li>条件2. 週末連休を1回以上確保する</li>\n            <li>条件3. 連続勤務は4日まで</li>\n            <li>条件4. 夜勤の翌日の日勤は不可</li>\n            <li>条件5. 連続夜勤は3日まで</li>\n          </ul>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nController.propTypes = {\n  resetFunc: PropTypes.func,\n  optimizeFunc: PropTypes.func,\n}\n\nexport default Controller\n","import XorShift from 'xorshift'\n\nexport function getRandomSeed() {\n  return Math.random() * Math.pow(2, 32)\n}\n\nexport class Random {\n  constructor(seed) {\n    if (seed === null) seed = getRandomSeed()\n    this.rand = new XorShift.constructor([seed, 1, 2, 3])\n  }\n\n  random() {\n    return this.rand.random()\n  }\n  randint(end) {\n    return Math.floor(this.rand.random() * end)\n  }\n}\n","import XorShift from 'xorshift'\nimport { getRandomSeed } from './Utility'\n\nclass Annealer {\n  constructor(start_temp, end_temp, end_time, seed = null) {\n    if (seed === null) seed = getRandomSeed()\n    this.start_temperature = start_temp\n    this.end_temperature = end_temp\n    this.end_time = end_time\n    this.temperature = this.start_temperature\n    this.rand = new XorShift.constructor([seed, 1, 2, 3])\n  }\n\n  update(time) {\n    // end_tempertureが小さすぎると、序盤の温度が低くなりすぎるので注意が必要\n    let elapsed = Math.max(Math.min(time / this.end_time, 1.0), 0.0)\n    this.temperature =\n      Math.pow(this.start_temperature, 1.0 - elapsed) *\n      Math.pow(this.end_temperature, elapsed)\n  }\n\n  accept(score_current, score_next, is_minimize = true) {\n    let prob = this.accept_prob(score_current, score_next, is_minimize)\n    return prob >= 1.0 || this.rand.random() < prob\n  }\n\n  accept_prob(score_current, score_next, is_minimize = true) {\n    let gain = score_next - score_current\n    if (is_minimize) gain *= -1.0\n\n    if (gain > 0.0) return 1.0\n    const eps = 0.001\n    const prob = Math.exp(gain / (this.temperature + eps))\n    return prob\n  }\n}\n\nexport default Annealer\n","const HD = 0 // 休日\nconst DS = 1 // 日勤\nconst NS = 2 // 夜勤\n\nclass GridState {\n  constructor(height, width) {\n    this.height = height\n    this.width = width\n    this.matrix = null\n    this.current_score = 0.0\n  }\n\n  static Create(height, width) {\n    let matrix = []\n    for (let r = 0; r < height; r++) {\n      let row = []\n      for (let c = 0; c < width; c++) {\n        row.push(0)\n      }\n      matrix.push(row)\n    }\n    return this.CreateWithArray(matrix)\n  }\n\n  static CreateWithArray(matrix) {\n    let height = matrix.length\n    let width = matrix[0].length\n    let state = new GridState(height, width)\n    state.matrix = matrix\n    state.current_score = state.evaluate()\n    return state\n  }\n\n  render() {\n    // jsだと+=による連結で良いらしい\n    let st = ''\n    for (let r = 0; r < this.height; r++) {\n      for (let c = 0; c < this.width; c++) {\n        st += this.matrix[r][c]\n        if (c === this.width - 1) st += '\\n'\n        else st += ','\n      }\n    }\n    return st\n  }\n\n  shift_matrix() {\n    let matrix = []\n    matrix.push(this.evaluation_amount_s1())\n    matrix.push(this.evaluation_amount_s2())\n    return matrix\n  }\n\n  nurse_matrix() {\n    let matrix = []\n    matrix.push(this.evaluation_amount_n1())\n    matrix.push(this.evaluation_amount_n2())\n    matrix.push(this.evaluation_amount_n3())\n    matrix.push(this.evaluation_amount_n4())\n    matrix.push(this.evaluation_amount_n5())\n    return matrix\n  }\n\n  changeCell(r, c) {\n    const v = this.matrix[r][c]\n    this.matrix[r][c] = (v + 1) % 3\n  }\n\n  evaluate() {\n    /*\n        シフト制約\n        条件1: 日勤のシフトが2人以上\n        条件2: 夜勤のシフトが2人以上\n\n        ナース制約\n        条件1: 休みが7日以上\n        条件2: 週末連休を1回以上確保する（6-7日目、13-14日目..を土日とする）\n        条件3: 連続勤務は4日まで\n        条件4: 夜勤の翌日の日勤は不可\n        条件5: 連続夜勤は3日まで\n     */\n    const s1 = this.evaluation_amount_s1().reduce(\n      (accm, curr) => accm + curr,\n      0\n    )\n    const s2 = this.evaluation_amount_s2().reduce(\n      (accm, curr) => accm + curr,\n      0\n    )\n    const n1 = this.evaluation_amount_n1().reduce(\n      (accm, curr) => accm + curr,\n      0\n    )\n    const n2 = this.evaluation_amount_n2().reduce(\n      (accm, curr) => accm + curr,\n      0\n    )\n    const n3 = this.evaluation_amount_n3().reduce(\n      (accm, curr) => accm + curr,\n      0\n    )\n    const n4 = this.evaluation_amount_n4().reduce(\n      (accm, curr) => accm + curr,\n      0\n    )\n    const n5 = this.evaluation_amount_n5().reduce(\n      (accm, curr) => accm + curr,\n      0\n    )\n    return s1 + s2 + n1 + n2 + n3 + n4 + n5\n  }\n\n  evaluation_amount_s1() {\n    let required_workers = 2\n    return this.days_n_day_workers().map((value) =>\n      Math.max(required_workers - value, 0)\n    )\n  }\n  evaluation_amount_s2() {\n    let required_workers = 2\n    return this.days_n_night_workers().map((value) =>\n      Math.max(required_workers - value, 0)\n    )\n  }\n  evaluation_amount_n1() {\n    let require_holidays = 7\n    return this.workers_n_holidays().map((value) =>\n      Math.max(require_holidays - value, 0)\n    )\n  }\n  evaluation_amount_n2() {\n    return this.workers_weekend_holidays()\n  }\n  evaluation_amount_n3() {\n    return this.workers_serial_works()\n  }\n  evaluation_amount_n4() {\n    return this.workers_day_after_night_work()\n  }\n  evaluation_amount_n5() {\n    return this.workers_serial_night_works()\n  }\n\n  days_n_day_workers() {\n    let day_values = []\n    for (let c = 0; c < this.width; c++) {\n      let workers = 0\n      for (let r = 0; r < this.height; r++) {\n        if (this.matrix[r][c] === DS) workers += 1\n      }\n      day_values.push(workers)\n    }\n    return day_values\n  }\n\n  days_n_night_workers() {\n    let day_values = []\n    for (let c = 0; c < this.width; c++) {\n      let workers = 0\n      for (let r = 0; r < this.height; r++) {\n        if (this.matrix[r][c] === NS) workers += 1\n      }\n      day_values.push(workers)\n    }\n    return day_values\n  }\n\n  workers_n_holidays() {\n    let worker_values = []\n    for (let r = 0; r < this.height; r++) {\n      let days = 0\n      for (let c = 0; c < this.width; c++) {\n        if (this.matrix[r][c] === HD) days += 1\n      }\n      worker_values.push(days)\n    }\n    return worker_values\n  }\n\n  workers_weekend_holidays() {\n    // 土日に連続して休みをとれていない場合、カウントする\n    // 土日（6-7日目、13-14日目..)を土日とする\n    let worker_values = []\n    let weekends = []\n    for (let c = 6; c < this.width; c += 7) {\n      weekends.push([c - 1, c])\n    }\n\n    for (let r = 0; r < this.height; r++) {\n      let violation = 1\n      weekends.forEach((weekend) => {\n        let sat = weekend[0]\n        let sun = weekend[1]\n        if (this.matrix[r][sat] === HD && this.matrix[r][sun] === HD)\n          violation = 0\n      })\n      worker_values.push(violation)\n    }\n    return worker_values\n  }\n\n  workers_serial_works() {\n    // 連続の勤務のカウントを行う\n\n    // 4連続を超える勤務日につき1カウントが増える\n    // つまり、6連続勤務では2カウントとなる\n    let worker_values = []\n    let work_limit = 4\n\n    for (let r = 0; r < this.height; r++) {\n      let violation = 0\n      let work_days = 0\n      for (let c = 0; c < this.width; c++) {\n        if (this.matrix[r][c] === HD) work_days = 0\n        else {\n          work_days += 1\n          if (work_days > work_limit) violation += 1\n        }\n      }\n      worker_values.push(violation)\n    }\n    return worker_values\n  }\n\n  workers_day_after_night_work() {\n    let worker_values = []\n    for (let r = 0; r < this.height; r++) {\n      let violation = 0\n      for (let c = 0; c < this.width; c++) {\n        if (\n          c < this.width - 1 &&\n          this.matrix[r][c] === NS &&\n          this.matrix[r][c + 1] === DS\n        )\n          violation += 1\n      }\n      worker_values.push(violation)\n    }\n    return worker_values\n  }\n\n  workers_serial_night_works() {\n    // 3連続を超える勤務日につき1カウントが増える\n    // つまり、6連続勤務では3カウントとなる\n\n    let worker_values = []\n    let work_limit = 3\n\n    for (let r = 0; r < this.height; r++) {\n      let violation = 0\n      let work_days = 0\n      for (let c = 0; c < this.width; c++) {\n        if (this.matrix[r][c] !== NS) work_days = 0\n        else {\n          work_days += 1\n          if (work_days > work_limit) violation += 1\n        }\n      }\n      worker_values.push(violation)\n    }\n    return worker_values\n  }\n}\n\nexport default GridState\n","import Annealer from './Annealer'\nimport GridState from './GridState'\nimport { Random } from './Utility'\n\nlet defaultParams = {\n  n_trials: 100000,\n  start_temp: 10,\n  end_temp: 0.01,\n  end_time: 100000,\n  seed_runner: null,\n  seed_annealer: null,\n}\n\nclass GridStateManager {\n  constructor(H, W, params = {}) {\n    this.params = {\n      ...defaultParams,\n      params,\n    }\n\n    this.annealer = new Annealer(\n      this.params.start_temp,\n      this.params.end_temp,\n      this.params.end_time,\n      this.params.seed_annealer\n    )\n    this.random = new Random(this.params.seed_runner)\n\n    this.prob_action1 = 0.4\n    this.prob_action2 = 0.3\n    this.n_nurses = H\n    this.n_days = W\n    this.n_trials = this.params.n_trials\n\n    // state\n    this.gridState = GridState.Create(this.n_nurses, this.n_days)\n    this.steps = 0\n    this.isRunning = false\n    this.finished = false\n  }\n\n  // public methods\n  reset() {\n    if (this.isRunning) {\n      return\n    }\n    this.gridState = GridState.Create(this.n_nurses, this.n_days)\n    this.steps = 0\n    this.isRunning = false\n    this.finished = false\n  }\n\n  changeCell(r, c) {\n    if (this.isRunning) {\n      return\n    }\n    this.gridState.changeCell(r, c)\n  }\n\n  async runAsyncAll(steps, callback) {\n    if (this.isRunning) {\n      return\n    }\n    this.reset()\n    this.isRunning = true\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      await this.runAsync(steps).then(callback)\n      if (this.finished) break\n    }\n    this.isRunning = false\n  }\n\n  // private methods\n  runAsync(steps) {\n    const self = this\n    return new Promise(function (resolve) {\n      // setTimeoutをつけないと、renderが走らないので注意\n      setTimeout(() => {\n        self.run(steps)\n        return resolve(self)\n      }, 1)\n    })\n  }\n\n  run(steps) {\n    for (let i = 0; i < steps; i++) {\n      if (this.steps >= this.n_trials) {\n        this.finished = true\n        break\n      }\n      this.steps += 1\n      if (i % 100 === 0) this.annealer.update(this.steps)\n      let p = this.random.random()\n      if (p < this.prob_action1) {\n        let r = this.random.randint(this.n_nurses)\n        let c = this.random.randint(this.n_days)\n        let x = this.random.randint(3)\n        let cx = this.gridState.matrix[r][c]\n        if (x === cx) continue\n        this.gridState.matrix[r][c] = x\n\n        let current_score = this.gridState.current_score\n        let next_score = this.gridState.evaluate()\n        if (this.annealer.accept(current_score, next_score)) {\n          this.gridState.current_score = next_score\n        } else {\n          this.gridState.matrix[r][c] = cx\n        }\n      } else if (p < this.prob_action1 + this.prob_action2) {\n        let r1 = this.random.randint(this.n_nurses)\n        let r2 = this.random.randint(this.n_nurses)\n        let c = this.random.randint(this.n_days)\n        let x1 = this.gridState.matrix[r1][c]\n        let x2 = this.gridState.matrix[r2][c]\n        if (x1 === x2) continue\n        this.gridState.matrix[r1][c] = x2\n        this.gridState.matrix[r2][c] = x1\n\n        let current_score = this.gridState.current_score\n        let next_score = this.gridState.evaluate()\n        if (this.annealer.accept(current_score, next_score)) {\n          this.gridState.current_score = next_score\n        } else {\n          this.gridState.matrix[r1][c] = x1\n          this.gridState.matrix[r2][c] = x2\n        }\n      } else {\n        let r = this.random.randint(this.n_nurses)\n        let c1 = this.random.randint(this.n_days)\n        let c2 = this.random.randint(this.n_days)\n        let x1 = this.gridState.matrix[r][c1]\n        let x2 = this.gridState.matrix[r][c2]\n        if (x1 === x2) continue\n        this.gridState.matrix[r][c1] = x2\n        this.gridState.matrix[r][c2] = x1\n        let current_score = this.gridState.current_score\n        let next_score = this.gridState.evaluate()\n        if (this.annealer.accept(current_score, next_score)) {\n          this.gridState.current_score = next_score\n        } else {\n          this.gridState.matrix[r][c1] = x1\n          this.gridState.matrix[r][c2] = x2\n        }\n      }\n      if (this.gridState.current_score === 0) {\n        this.finished = true\n        break\n      }\n    }\n    console.log(\n      `steps: ${this.steps}, score: ${this.gridState.current_score}, finished ${this.finished} `\n    )\n  }\n}\n\nexport default GridStateManager\n","// eslint-disable-next-line no-unused-vars\nimport React, { useState, Component } from 'react'\n// import {} from 'reactstrap'\nimport styles from './Cell.module.css'\nimport PropTypes from 'prop-types'\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let classes = [styles['cell']]\n    for (let cls of this.props.additionalClasses) {\n      classes.push(styles[cls])\n    }\n    if (this.props.isRightEnd) {\n      classes.push(styles['is-right-cell'])\n    }\n    if (this.props.isBottom) {\n      classes.push(styles['is-bottom-cell'])\n    }\n    const style = {\n      top: this.props.top,\n      left: this.props.left,\n      width: this.props.width,\n      height: this.props.height,\n    }\n    return (\n      <div\n        className={classes.join(' ')}\n        style={style}\n        onClick={this.props.onClick}\n      >\n        <div className={styles['inner-cell']}>{this.props.content}</div>\n      </div>\n    )\n  }\n}\n\nCell.defaultProps = {\n  onClick: () => {},\n  additionalClasses: [],\n}\n\nCell.propTypes = {\n  isRightEnd: PropTypes.bool.isRequired,\n  isBottom: PropTypes.bool.isRequired,\n  top: PropTypes.string.isRequired,\n  left: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  content: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  additionalClasses: PropTypes.arrayOf(PropTypes.string),\n}\n\nexport default Cell\n","/* eslint-disable no-unused-vars */\nimport React, { useState, Component } from 'react'\n// import {} from 'reactstrap'\nimport styles from './MainGrid.module.css'\nimport PropTypes from 'prop-types'\nimport XorShift from 'xorshift'\nimport { getRandomSeed } from '../modules/Utility'\nimport GridStateManager from '../modules/GridStateManager'\nimport Cell from './Cell'\n\nclass MainGrid extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      keydown: false,\n      H: 8,\n      W: 14,\n    }\n\n    // basic parameters\n    let height1 = 40\n    let width1 = 75\n    let h1 = 2\n    let w1 = 1\n    let height2 = 40\n    let width2 = 50\n    let h2 = 8\n    let w2 = 14\n    let height3 = 40\n    let h3 = 2\n    let width3 = 50\n    let w3 = 5\n    let offset = 15\n    // cell\n    this.headerHeight = height1\n    this.headerWidth = width2\n    this.headerH = h1\n    this.headerW = w2\n    this.indexHeight = height2\n    this.indexWidth = width1\n    this.indexH = h2\n    this.indexW = w1\n    this.cellHeight = height2\n    this.cellWidth = width2\n    this.cellH = h2\n    this.cellW = w2\n    // shift-result\n    this.indexSRHeight = height3\n    this.indexSRWidth = width1\n    this.indexSRH = h3\n    this.indexSRW = w1\n    this.cellSRHeight = height3\n    this.cellSRWidth = width2\n    this.cellSRH = h3\n    this.cellSRW = w2\n    // nurse-result\n    this.headerNRHeight = height1\n    this.headerNRWidth = width3\n    this.headerNRH = h1\n    this.headerNRW = w3\n    this.cellNRHeight = height2\n    this.cellNRWidth = width3\n    this.cellNRH = h2\n    this.cellNRW = w3\n\n    this.y0 = 0\n    this.x0 = 0\n    this.y1 = this.headerHeight * this.headerH + offset\n    this.x1 = this.indexWidth * this.indexW + offset\n    this.y2 = this.y1 + this.cellHeight * this.cellH + offset\n    this.x2 = this.x1 + this.cellWidth * this.cellW + offset\n\n    const manager = new GridStateManager(this.state.H, this.state.W)\n    const gridState = manager.gridState\n    this.state.gridStateManager = manager\n    this.state.gridState = gridState\n    this.state.cellValues = gridState.matrix\n    this.state.shiftResultValues = gridState.shift_matrix()\n    this.state.nurseResultValues = gridState.nurse_matrix()\n\n    // binding\n    this.changeCell = this.changeCell.bind(this)\n  }\n\n  // trigger methods for gridStateManager\n  optimize() {\n    const controller = this.props.getControllerFunc()\n    const manager = this.state.gridStateManager\n    const steps = 1000\n    manager.runAsyncAll(steps, (runner) => {\n      this.update(manager.gridState)\n      this.updateController(manager)\n    })\n  }\n  reset() {\n    const manager = this.state.gridStateManager\n    manager.reset()\n    this.update(manager.gridState)\n    this.updateController(manager)\n  }\n  changeCell(r, c) {\n    const controller = this.props.getControllerFunc()\n    const manager = this.state.gridStateManager\n    manager.changeCell(r, c)\n\n    this.update(manager.gridState)\n    this.updateController(manager)\n  }\n\n  // process state\n  update(gridState) {\n    this.setState({\n      gridState: gridState,\n      cellValues: gridState.matrix,\n      shiftResultValues: gridState.shift_matrix(),\n      nurseResultValues: gridState.nurse_matrix(),\n    })\n  }\n  updateController(manager) {\n    const controller = this.props.getControllerFunc()\n    controller.setState({ steps: manager.steps })\n  }\n\n  // render\n  headerArea() {\n    const list = []\n    let H = this.headerH\n    let W = this.headerW\n    let top = this.y0\n    let left = this.x1\n    let height = this.headerHeight\n    let width = this.headerWidth\n    let weekdays = ['月', '火', '水', '木', '金', '土', '日']\n    let contentSource = (r, c) => {\n      if (r === 0) return weekdays[c % weekdays.length]\n      else return c + 1\n    }\n    for (let r = 0; r < H; r++) {\n      for (let c = 0; c < W; c++) {\n        const props = {\n          isRightEnd: c === W - 1,\n          isBottom: r === H - 1,\n          top: `${top + r * height}px`,\n          left: `${left + c * width}px`,\n          height: height,\n          width: width,\n          content: contentSource(r, c).toString(),\n          additionalClasses: ['header-cell'],\n        }\n        const cell = <Cell {...props} key={`cell${r}-${c}`} />\n        list.push(cell)\n      }\n    }\n    return list\n  }\n\n  indexArea() {\n    const list = []\n    let H = this.indexH\n    let W = this.indexW\n    let top = this.y1\n    let left = this.x0\n    let height = this.indexHeight\n    let width = this.indexWidth\n    let contentSource = (r, c) => {\n      return r + 1\n    }\n    for (let r = 0; r < H; r++) {\n      for (let c = 0; c < W; c++) {\n        const props = {\n          isRightEnd: c === W - 1,\n          isBottom: r === H - 1,\n          top: `${top + r * height}px`,\n          left: `${left + c * width}px`,\n          height: height,\n          width: width,\n          content: contentSource(r, c).toString(),\n          additionalClasses: ['index-cell'],\n        }\n        const cell = <Cell {...props} key={`cell${r}-${c}`} />\n        list.push(cell)\n      }\n    }\n    return list\n  }\n\n  mainArea() {\n    const list = []\n    let H = this.cellH\n    let W = this.cellW\n    let top = this.y1\n    let left = this.x1\n    let height = this.cellHeight\n    let width = this.cellWidth\n    let valuesList = ['', 'D', 'N']\n    let contentSource = (r, c) => {\n      const cellValue = this.state.cellValues[r][c]\n      return valuesList[cellValue]\n    }\n    for (let r = 0; r < H; r++) {\n      for (let c = 0; c < W; c++) {\n        const props = {\n          isRightEnd: c === W - 1,\n          isBottom: r === H - 1,\n          top: `${top + r * height}px`,\n          left: `${left + c * width}px`,\n          height: height,\n          width: width,\n          content: contentSource(r, c),\n          additionalClasses: ['main-cell'],\n          onClick: () => this.changeCell(r, c),\n        }\n        const cell = <Cell {...props} key={`cell${r}-${c}`} />\n        list.push(cell)\n      }\n    }\n    return list\n  }\n\n  indexShiftResultArea() {\n    const list = []\n    let H = this.indexSRH\n    let W = this.indexSRW\n    let top = this.y2\n    let left = this.x0\n    let height = this.indexSRHeight\n    let width = this.indexSRWidth\n    let conditions = ['日勤', '夜勤']\n    let contentSource = (r, c) => {\n      return conditions[r]\n    }\n    for (let r = 0; r < H; r++) {\n      for (let c = 0; c < W; c++) {\n        const props = {\n          isRightEnd: c === W - 1,\n          isBottom: r === H - 1,\n          top: `${top + r * height}px`,\n          left: `${left + c * width}px`,\n          height: height,\n          width: width,\n          content: contentSource(r, c),\n          additionalClasses: ['index-cell'],\n        }\n        const cell = <Cell {...props} key={`cell${r}-${c}`} />\n        list.push(cell)\n      }\n    }\n    return list\n  }\n\n  cellShiftResultArea() {\n    const list = []\n    let H = this.cellSRH\n    let W = this.cellSRW\n    let top = this.y2\n    let left = this.x1\n    let height = this.cellSRHeight\n    let width = this.cellSRWidth\n    let contentSource = (r, c) => {\n      return this.state.shiftResultValues[r][c]\n    }\n    let additionalClassesSource = (r, c) => {\n      const v = contentSource(r, c)\n      if (v === 0) {\n        return ['success-cell']\n      } else {\n        return ['failed-cell']\n      }\n    }\n    for (let r = 0; r < H; r++) {\n      for (let c = 0; c < W; c++) {\n        const props = {\n          isRightEnd: c === W - 1,\n          isBottom: r === H - 1,\n          top: `${top + r * height}px`,\n          left: `${left + c * width}px`,\n          height: height,\n          width: width,\n          content: contentSource(r, c).toString(),\n          additionalClasses: additionalClassesSource(r, c),\n        }\n        const cell = <Cell {...props} key={`cell${r}-${c}`} />\n        list.push(cell)\n      }\n    }\n    return list\n  }\n\n  headerNurseResultArea() {\n    const list = []\n    let H = this.headerNRH\n    let W = this.headerNRW\n    let top = this.y0\n    let left = this.x2\n    let height = this.headerNRHeight\n    let width = this.headerNRWidth\n    let conditions = [\n      ['条件', '条件', '条件', '条件', '条件'],\n      ['１', '２', '３', '４', '５'],\n    ]\n    let contentSource = (r, c) => {\n      return conditions[r][c]\n    }\n    for (let r = 0; r < H; r++) {\n      for (let c = 0; c < W; c++) {\n        const props = {\n          isRightEnd: c === W - 1,\n          isBottom: r === H - 1,\n          top: `${top + r * height}px`,\n          left: `${left + c * width}px`,\n          height: height,\n          width: width,\n          content: contentSource(r, c),\n          additionalClasses: ['header-cell'],\n        }\n        const cell = <Cell {...props} key={`cell${r}-${c}`} />\n        list.push(cell)\n      }\n    }\n    return list\n  }\n\n  cellNurseResultArea() {\n    const list = []\n    let H = this.cellNRH\n    let W = this.cellNRW\n    let top = this.y1\n    let left = this.x2\n    let height = this.cellNRHeight\n    let width = this.cellNRWidth\n    let contentSource = (r, c) => {\n      // 転置して出力すること\n      return this.state.nurseResultValues[c][r]\n    }\n    let additionalClassesSource = (r, c) => {\n      const v = contentSource(r, c)\n      if (v === 0) {\n        return ['success-cell']\n      } else {\n        return ['failed-cell']\n      }\n    }\n    for (let r = 0; r < H; r++) {\n      for (let c = 0; c < W; c++) {\n        const props = {\n          isRightEnd: c === W - 1,\n          isBottom: r === H - 1,\n          top: `${top + r * height}px`,\n          left: `${left + c * width}px`,\n          height: height,\n          width: width,\n          content: contentSource(r, c).toString(),\n          additionalClasses: additionalClassesSource(r, c),\n        }\n        const cell = <Cell {...props} key={`cell${r}-${c}`} />\n        list.push(cell)\n      }\n    }\n    return list\n  }\n\n  render() {\n    return (\n      <div className={styles['display-area']}>\n        {this.headerArea()}\n        {this.indexArea()}\n        {this.mainArea()}\n        {this.indexShiftResultArea()}\n        {this.cellShiftResultArea()}\n        {this.headerNurseResultArea()}\n        {this.cellNurseResultArea()}\n      </div>\n    )\n  }\n}\n\nMainGrid.propTypes = {\n  getControllerFunc: PropTypes.func,\n}\n\nexport default MainGrid\n","/* eslint-disable no-unused-vars */\nimport React, { useState, Component } from 'react'\nimport {\n  Container,\n  Row,\n  Col,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from 'reactstrap'\nimport styles from './NavBar.module.css'\nimport MainGrid from './MainGrid'\n\nconst rectStyle = {\n  border: '1px solid #333333',\n  width: '300px',\n  height: '400px',\n}\n\nclass MainUI extends Component {\n  constructor(props) {\n    super(props)\n    this.MainGridChild = React.createRef()\n  }\n\n  render() {\n    return (\n      <Container className=\"py-4 mx-4\" style={{ maxWidth: 'none' }}>\n        <MainGrid ref={this.MainGridChild} {...this.props} />\n      </Container>\n    )\n  }\n}\n\nexport default MainUI\n","import './App.css'\nimport React, { Component } from 'react'\nimport NavBar from './components/NavBar'\nimport { Col, Row, Container } from 'reactstrap'\nimport Controller from './components/Controller'\nimport MainUI from './components/MainUI'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.optimize = this.optimize.bind(this)\n    this.reset = this.reset.bind(this)\n    this.getController = this.getController.bind(this)\n    this.MainUIChild = React.createRef()\n    this.ControllerChild = React.createRef()\n  }\n\n  optimize() {\n    this.MainUIChild.current.MainGridChild.current.optimize()\n  }\n\n  reset() {\n    this.MainUIChild.current.MainGridChild.current.reset()\n  }\n\n  getController() {\n    return this.ControllerChild.current\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Container fluid=\"true\">\n          <Row>\n            <Col md=\"3\">\n              <Controller\n                ref={this.ControllerChild}\n                optimizeFunc={this.optimize}\n                resetFunc={this.reset}\n              />\n            </Col>\n            <Col md=\"9\">\n              <MainUI\n                ref={this.MainUIChild}\n                getControllerFunc={this.getController}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}